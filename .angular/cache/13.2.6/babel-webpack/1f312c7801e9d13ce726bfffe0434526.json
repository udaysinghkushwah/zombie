{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n\nfunction BoardUiComponent_ng_container_1_ng_container_1_ng_container_2_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const token_r7 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" z\", token_r7.id, \" \");\n  }\n}\n\nfunction BoardUiComponent_ng_container_1_ng_container_1_ng_container_2_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const token_r7 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" c\", token_r7.id, \"\");\n  }\n}\n\nfunction BoardUiComponent_ng_container_1_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0)(1, 3);\n    i0.ɵɵtemplate(2, BoardUiComponent_ng_container_1_ng_container_1_ng_container_2_span_2_Template, 2, 1, \"span\", 4);\n    i0.ɵɵtemplate(3, BoardUiComponent_ng_container_1_ng_container_1_ng_container_2_span_3_Template, 2, 1, \"span\", 4);\n    i0.ɵɵelementContainerEnd()();\n  }\n\n  if (rf & 2) {\n    const token_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitch\", token_r7.type);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"ZOMBIE\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"CREATURE\");\n  }\n}\n\nconst _c0 = function (a0, a1, a2) {\n  return {\n    \"bg-green-400 hover:bg-green-500\": a0,\n    \"bg-blue-400 hover:bg-blue-500\": a1,\n    \"bg-red-400 hover:bg-red-500\": a2\n  };\n};\n\nfunction BoardUiComponent_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 2);\n    i0.ɵɵlistener(\"click\", function BoardUiComponent_ng_container_1_ng_container_1_Template_div_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const columnIndex_r5 = restoredCtx.index;\n      const rowIndex_r2 = i0.ɵɵnextContext().index;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.onTileClick(columnIndex_r5, rowIndex_r2);\n    });\n    i0.ɵɵtemplate(2, BoardUiComponent_ng_container_1_ng_container_1_ng_container_2_Template, 4, 3, \"ng-container\", 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const cell_r4 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(2, _c0, ctx_r3.onlyHasZombies(cell_r4), ctx_r3.onlyHasCreatures(cell_r4), ctx_r3.hasCreaturesAndZombies(cell_r4)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", cell_r4);\n  }\n}\n\nfunction BoardUiComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, BoardUiComponent_ng_container_1_ng_container_1_Template, 3, 6, \"ng-container\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const row_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", row_r1);\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    \"grid-template-columns\": a0\n  };\n};\n\nexport let BoardUiComponent = /*#__PURE__*/(() => {\n  class BoardUiComponent {\n    constructor() {\n      this.grid = [];\n      this.tileClicked = new EventEmitter();\n    }\n\n    get gridTemplateColumns() {\n      return `repeat(${(this.grid || []).length}, 1fr)`;\n    }\n\n    onTileClick(columnIndex, rowIndex) {\n      this.tileClicked.emit({\n        x: columnIndex,\n        y: rowIndex\n      });\n    }\n\n    onlyHasZombies(cell) {\n      return cell.length > 0 && cell.length === cell.filter(({\n        type\n      }) => type === 'ZOMBIE').length;\n    }\n\n    onlyHasCreatures(cell) {\n      return cell.length > 0 && cell.length === cell.filter(({\n        type\n      }) => type === 'CREATURE').length;\n    }\n\n    hasCreaturesAndZombies(cell) {\n      return cell.some(({\n        type\n      }) => type === 'ZOMBIE') && cell.some(({\n        type\n      }) => type === 'CREATURE');\n    }\n\n  }\n\n  BoardUiComponent.ɵfac = function BoardUiComponent_Factory(t) {\n    return new (t || BoardUiComponent)();\n  };\n\n  BoardUiComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BoardUiComponent,\n    selectors: [[\"zombie-board-ui\"]],\n    inputs: {\n      grid: \"grid\"\n    },\n    outputs: {\n      tileClicked: \"tileClicked\"\n    },\n    decls: 2,\n    vars: 4,\n    consts: [[1, \"grid\", \"gap-4\", 3, \"ngStyle\"], [4, \"ngFor\", \"ngForOf\"], [\"data-testid\", \"tile\", 1, \"relative\", \"flex\", \"items-center\", \"justify-center\", \"overflow-hidden\", \"-translate-y-1/2\", \"border-2\", \"border-gray-700\", \"aspect-square\", \"top-1/2\", \"hover:bg-slate-200\", 3, \"ngClass\", \"click\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"]],\n    template: function BoardUiComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, BoardUiComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(2, _c1, ctx.gridTemplateColumns));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.grid);\n      }\n    },\n    directives: [i1.NgStyle, i1.NgForOf, i1.NgClass, i1.NgSwitch, i1.NgSwitchCase],\n    encapsulation: 2\n  });\n  return BoardUiComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}