{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { isEqual } from 'lodash';\nimport { combineLatest, distinctUntilChanged, map, Subscription } from 'rxjs';\nimport { MODE_CREATURE, MODE_ZOMBIE, SettingsForm } from './settings-form';\nimport { BoardDataAccessService } from '@zombie/board/data-access';\nimport { GRID_MAX, GRID_MIN } from '@zombie/board/interfaces';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@zombie/board/data-access\";\nimport * as i2 from \"../../../../../shared/ui/src/lib/modal/modal.component\";\nimport * as i3 from \"../../../../../shared/ui/src/lib/modal/modal-header/modal-header.component\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../../../../shared/ui/src/lib/modal/modal-body/modal-body.component\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"../../../../../board/ui/src/lib/board-ui.component\";\nimport * as i8 from \"../../../../../shared/ui/src/lib/modal/modal-footer/modal-footer.component\";\nimport * as i9 from \"../../../../../shared/ui/src/lib/button/button.component\";\n\nfunction HomeModalsSettingsComponent_strong_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"strong\", 16);\n    i0.ɵɵtext(1, \"Zombie\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction HomeModalsSettingsComponent_strong_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"strong\", 17);\n    i0.ɵɵtext(1, \"Creature\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction HomeModalsSettingsComponent_ng_container_26_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const message_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", message_r4, \" \");\n  }\n}\n\nfunction HomeModalsSettingsComponent_ng_container_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, HomeModalsSettingsComponent_ng_container_26_p_1_Template, 2, 1, \"p\", 18);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.errorMessages);\n  }\n}\n\nexport class HomeModalsSettingsComponent {\n  constructor(board) {\n    this.board = board;\n    this.gridMin = GRID_MIN;\n    this.gridMax = GRID_MAX;\n    this.hasAttempedSubmission = false;\n    this.settingsForm = new SettingsForm();\n    this.subscriptions = new Subscription();\n    this.grid$ = this.board.fetchBoard().pipe(map(({\n      grid\n    }) => grid));\n    this.closeable = false;\n    this.settings = new EventEmitter();\n    this.dismiss = new EventEmitter();\n    this.subscriptions.add(this.bindSizeToSizeExtra());\n    this.subscriptions.add(this.bindSizeExtraToSize());\n    this.subscriptions.add(this.bindSizeToBoardGrid());\n    this.subscriptions.add(this.bindMovesToBoardMoveset());\n    this.subscriptions.add(this.bindBoardGridToZombies());\n    this.subscriptions.add(this.bindBoardGridToCreatures());\n  }\n\n  ngOnInit() {\n    this.settingsForm.formControls.size.setValue(this.settingsForm.formControls.size.value);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n\n  bindSizeToSizeExtra() {\n    const size = this.settingsForm.formControls.size;\n    const sizeExtra = this.settingsForm.formControls.sizeExtra;\n    const sizeChanges = size.valueChanges.pipe(distinctUntilChanged());\n    return sizeChanges.subscribe(data => sizeExtra.setValue(data));\n  }\n\n  bindSizeExtraToSize() {\n    const size = this.settingsForm.formControls.size;\n    const sizeExtra = this.settingsForm.formControls.sizeExtra;\n    const sizeExtraChanges = sizeExtra.valueChanges.pipe(distinctUntilChanged());\n    return sizeExtraChanges.subscribe(data => size.setValue(data));\n  }\n\n  bindSizeToBoardGrid() {\n    const sizeChanges = this.settingsForm.formControls.size.valueChanges.pipe(distinctUntilChanged());\n    const boardChanges = this.board.fetchBoard().pipe(distinctUntilChanged(isEqual));\n    return combineLatest([sizeChanges, boardChanges]).subscribe(([size, board]) => {\n      const {\n        grid\n      } = board;\n      const newGrid = [];\n\n      for (let y = 0; y < size; y++) {\n        const row = [];\n\n        for (let x = 0; x < size; x++) {\n          row.push((grid[y] || [])[x] || []);\n        }\n\n        newGrid.push(row);\n      }\n\n      this.board.setBoard(Object.assign(Object.assign({}, board), {\n        grid: newGrid\n      }));\n    });\n  }\n\n  bindMovesToBoardMoveset() {\n    const moveChanges = this.settingsForm.formControls.moveSet.valueChanges.pipe(distinctUntilChanged());\n    const boardChanges = this.board.fetchBoard().pipe(distinctUntilChanged(isEqual));\n    return combineLatest([moveChanges, boardChanges]).subscribe(([moveSet, board]) => {\n      this.board.setBoard(Object.assign(Object.assign({}, board), {\n        moveSet\n      }));\n    });\n  }\n\n  bindBoardGridToZombies() {\n    const zombieCounter = this.settingsForm.formControls.zombies;\n    const zombiesOnBoardChanges = this.board.fetchZombies().pipe(distinctUntilChanged());\n    return zombiesOnBoardChanges.subscribe(zombies => zombieCounter.setValue(zombies.length));\n  }\n\n  bindBoardGridToCreatures() {\n    const creatureCounter = this.settingsForm.formControls.creatures;\n    const creaturesOnBoardChanges = this.board.fetchCreatures().pipe(distinctUntilChanged());\n    return creaturesOnBoardChanges.subscribe(creatures => creatureCounter.setValue(creatures.length));\n  }\n\n  onTileClick(coords) {\n    this.updateGameBoard(coords);\n  }\n\n  updateGameBoard(coords) {\n    const cell = this.board.getTokensOnCoordinate(coords);\n    const mode = this.settingsForm.formControls.mode.value;\n    const zombies = cell.filter(value => value.type === 'ZOMBIE');\n    const creatures = cell.filter(value => value.type === 'CREATURE');\n\n    switch (mode) {\n      case MODE_ZOMBIE:\n        zombies.length > 0 ? this.board.removeZombiesFromCell(coords) : this.board.addZombieToCell(coords);\n        break;\n\n      case MODE_CREATURE:\n        creatures.length > 0 ? this.board.removeCreaturesFromCell(coords) : this.board.addCreatureToCell(coords);\n        break;\n    }\n  }\n\n  get errors() {\n    return Object.keys(this.settingsForm.controls).map(key => {\n      var _a;\n\n      return {\n        key,\n        error: (_a = this.settingsForm.get(key)) === null || _a === void 0 ? void 0 : _a.errors\n      };\n    }).filter(({\n      error\n    }) => error);\n  }\n\n  get errorMessages() {\n    return this.errors.map(({\n      key\n    }) => {\n      return {\n        size: `Use the slider to select a size between ${this.gridMin} and ${this.gridMax}`,\n        sizeExtra: `Use the slider to select a size between ${this.gridMin} and ${this.gridMax}`,\n        zombies: `Click on the grid to place at least 1 zombie`,\n        creatures: `Click on the grid to place creatures`,\n        mode: `Select a token to place by clicking on the radio buttons`,\n        moveSet: `Type a string of directions (U, D, L, R for Up, Down, Left and Right respectively) that zombies will follow`\n      }[key];\n    });\n  }\n\n  submitButtonClick() {\n    this.hasAttempedSubmission = true;\n\n    if (this.errorMessages.length <= 0) {\n      this.settings.emit(this.board.getBoard());\n    }\n  }\n\n  onModalDismiss(event) {\n    if (!this.closeable) {\n      return;\n    }\n\n    this.dismiss.emit(event);\n  }\n\n}\n\nHomeModalsSettingsComponent.ɵfac = function HomeModalsSettingsComponent_Factory(t) {\n  return new (t || HomeModalsSettingsComponent)(i0.ɵɵdirectiveInject(i1.BoardDataAccessService));\n};\n\nHomeModalsSettingsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeModalsSettingsComponent,\n  selectors: [[\"zombie-home-modals-settings\"]],\n  inputs: {\n    closeable: \"closeable\"\n  },\n  outputs: {\n    settings: \"settings\",\n    dismiss: \"dismiss\"\n  },\n  features: [i0.ɵɵProvidersFeature([BoardDataAccessService])],\n  decls: 30,\n  vars: 18,\n  consts: [[3, \"dismiss\"], [1, \"pl-12\", \"mb-4\"], [1, \"pl-12\", 2, \"margin-top\", \"0\"], [\"class\", \"text-green-600\", 4, \"ngIf\"], [\"class\", \"text-blue-600\", 4, \"ngIf\"], [1, \"flex\", \"flex-col\", \"text-gray-900\", \"gap-y-5\", 3, \"formGroup\"], [1, \"block\", \"pl-12\", \"pr-10\", 3, \"grid\", \"tileClicked\"], [1, \"flex\", \"justify-center\", \"px-3\", \"pr-10\", \"align-middle\"], [\"type\", \"number\", 3, \"formControl\", \"min\", \"max\"], [\"type\", \"range\", 1, \"flex-1\", 3, \"formControl\", \"min\", \"max\"], [1, \"flex\", \"justify-center\", \"pl-12\", \"gap-x-5\"], [\"type\", \"radio\", \"name\", \"mode\", 3, \"formControl\", \"value\"], [1, \"flex\", \"items-baseline\", \"justify-start\", \"ml-12\", \"mr-10\", \"gap-x-5\"], [\"type\", \"text\", \"placeholder\", \"UDLR\", 1, \"inline-block\", \"w-full\", \"px-4\", \"py-2\", \"border-gray-500\", \"rounded-none\", \"focus:ring-indigo-500\", \"focus:border-indigo-500\", \"rounded-r-md\", \"sm:text-sm\", 3, \"formControl\"], [4, \"ngIf\"], [\"color\", \"green\", 1, \"inline-flex\", \"justify-center\", \"w-full\", \"ml-12\", \"mr-10\", 3, \"click\"], [1, \"text-green-600\"], [1, \"text-blue-600\"], [\"class\", \"ml-12 mr-10 text-red-500\", \"style\", \"margin-top: 0\", 4, \"ngFor\", \"ngForOf\"], [1, \"ml-12\", \"mr-10\", \"text-red-500\", 2, \"margin-top\", \"0\"]],\n  template: function HomeModalsSettingsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"zombie-modal\", 0);\n      i0.ɵɵlistener(\"dismiss\", function HomeModalsSettingsComponent_Template_zombie_modal_dismiss_0_listener($event) {\n        return ctx.onModalDismiss($event);\n      });\n      i0.ɵɵelementStart(1, \"zombie-modal-header\")(2, \"h3\", 1);\n      i0.ɵɵtext(3, \"Settings\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"p\", 2);\n      i0.ɵɵtext(5, \" Click on the grid to place a \");\n      i0.ɵɵtemplate(6, HomeModalsSettingsComponent_strong_6_Template, 2, 0, \"strong\", 3);\n      i0.ɵɵtemplate(7, HomeModalsSettingsComponent_strong_7_Template, 2, 0, \"strong\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"zombie-modal-body\")(9, \"form\", 5)(10, \"zombie-board-ui\", 6);\n      i0.ɵɵlistener(\"tileClicked\", function HomeModalsSettingsComponent_Template_zombie_board_ui_tileClicked_10_listener($event) {\n        return ctx.onTileClick($event);\n      });\n      i0.ɵɵpipe(11, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 7);\n      i0.ɵɵelement(13, \"input\", 8)(14, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 10)(16, \"label\");\n      i0.ɵɵelement(17, \"input\", 11);\n      i0.ɵɵtext(18, \" Zombie \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"label\");\n      i0.ɵɵelement(20, \"input\", 11);\n      i0.ɵɵtext(21, \" Creature \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 12)(23, \"label\");\n      i0.ɵɵtext(24, \"Moves: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(26, HomeModalsSettingsComponent_ng_container_26_Template, 2, 1, \"ng-container\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"zombie-modal-footer\")(28, \"zombie-button\", 15);\n      i0.ɵɵlistener(\"click\", function HomeModalsSettingsComponent_Template_zombie_button_click_28_listener() {\n        return ctx.submitButtonClick();\n      });\n      i0.ɵɵtext(29, \"Submit\");\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.settingsForm.formControls.mode.value === 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.settingsForm.formControls.mode.value === 1);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.settingsForm);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"grid\", i0.ɵɵpipeBind1(11, 16, ctx.grid$));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formControl\", ctx.settingsForm.formControls.sizeExtra)(\"min\", ctx.gridMin)(\"max\", ctx.gridMax);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.settingsForm.formControls.size)(\"min\", ctx.gridMin)(\"max\", ctx.gridMax);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formControl\", ctx.settingsForm.formControls.mode)(\"value\", 0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formControl\", ctx.settingsForm.formControls.mode)(\"value\", 1);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formControl\", ctx.settingsForm.formControls.moveSet);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasAttempedSubmission);\n    }\n  },\n  directives: [i2.ModalComponent, i3.ModalHeaderComponent, i4.NgIf, i5.ModalBodyComponent, i6.ɵNgNoValidate, i6.NgControlStatusGroup, i6.FormGroupDirective, i7.BoardUiComponent, i6.NumberValueAccessor, i6.MinValidator, i6.MaxValidator, i6.DefaultValueAccessor, i6.NgControlStatus, i6.FormControlDirective, i6.RangeValueAccessor, i6.RadioControlValueAccessor, i4.NgForOf, i8.ModalFooterComponent, i9.ButtonComponent],\n  pipes: [i4.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"sources":["/Users/udaysingh/Documents/zombie/libs/home/modals/settings/src/lib/home-modals-settings.component.ts"],"names":["EventEmitter","isEqual","combineLatest","distinctUntilChanged","map","Subscription","MODE_CREATURE","MODE_ZOMBIE","SettingsForm","BoardDataAccessService","GRID_MAX","GRID_MIN","i0","i1","i2","i3","i4","i5","i6","i7","i8","i9","HomeModalsSettingsComponent_strong_6_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","HomeModalsSettingsComponent_strong_7_Template","HomeModalsSettingsComponent_ng_container_26_p_1_Template","message_r4","$implicit","ɵɵadvance","ɵɵtextInterpolate1","HomeModalsSettingsComponent_ng_container_26_Template","ɵɵelementContainerStart","ɵɵtemplate","ɵɵelementContainerEnd","ctx_r2","ɵɵnextContext","ɵɵproperty","errorMessages","HomeModalsSettingsComponent","constructor","board","gridMin","gridMax","hasAttempedSubmission","settingsForm","subscriptions","grid$","fetchBoard","pipe","grid","closeable","settings","dismiss","add","bindSizeToSizeExtra","bindSizeExtraToSize","bindSizeToBoardGrid","bindMovesToBoardMoveset","bindBoardGridToZombies","bindBoardGridToCreatures","ngOnInit","formControls","size","setValue","value","ngOnDestroy","unsubscribe","sizeExtra","sizeChanges","valueChanges","subscribe","data","sizeExtraChanges","boardChanges","newGrid","y","row","x","push","setBoard","Object","assign","moveChanges","moveSet","zombieCounter","zombies","zombiesOnBoardChanges","fetchZombies","length","creatureCounter","creatures","creaturesOnBoardChanges","fetchCreatures","onTileClick","coords","updateGameBoard","cell","getTokensOnCoordinate","mode","filter","type","removeZombiesFromCell","addZombieToCell","removeCreaturesFromCell","addCreatureToCell","errors","keys","controls","key","_a","error","get","submitButtonClick","emit","getBoard","onModalDismiss","event","ɵfac","HomeModalsSettingsComponent_Factory","t","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","selectors","inputs","outputs","features","ɵɵProvidersFeature","decls","vars","consts","template","HomeModalsSettingsComponent_Template","ɵɵlistener","HomeModalsSettingsComponent_Template_zombie_modal_dismiss_0_listener","$event","HomeModalsSettingsComponent_Template_zombie_board_ui_tileClicked_10_listener","ɵɵpipe","ɵɵelement","HomeModalsSettingsComponent_Template_zombie_button_click_28_listener","ɵɵpipeBind1","directives","ModalComponent","ModalHeaderComponent","NgIf","ModalBodyComponent","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","BoardUiComponent","NumberValueAccessor","MinValidator","MaxValidator","DefaultValueAccessor","NgControlStatus","FormControlDirective","RangeValueAccessor","RadioControlValueAccessor","NgForOf","ModalFooterComponent","ButtonComponent","pipes","AsyncPipe","encapsulation"],"mappings":"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","sourcesContent":["import { EventEmitter, } from '@angular/core';\nimport { isEqual } from 'lodash';\nimport { combineLatest, distinctUntilChanged, map, Subscription, } from 'rxjs';\nimport { MODE_CREATURE, MODE_ZOMBIE, SettingsForm } from './settings-form';\nimport { BoardDataAccessService } from '@zombie/board/data-access';\nimport { GRID_MAX, GRID_MIN, } from '@zombie/board/interfaces';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@zombie/board/data-access\";\nimport * as i2 from \"../../../../../shared/ui/src/lib/modal/modal.component\";\nimport * as i3 from \"../../../../../shared/ui/src/lib/modal/modal-header/modal-header.component\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../../../../shared/ui/src/lib/modal/modal-body/modal-body.component\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"../../../../../board/ui/src/lib/board-ui.component\";\nimport * as i8 from \"../../../../../shared/ui/src/lib/modal/modal-footer/modal-footer.component\";\nimport * as i9 from \"../../../../../shared/ui/src/lib/button/button.component\";\nfunction HomeModalsSettingsComponent_strong_6_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"strong\", 16);\n    i0.ɵɵtext(1, \"Zombie\");\n    i0.ɵɵelementEnd();\n} }\nfunction HomeModalsSettingsComponent_strong_7_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"strong\", 17);\n    i0.ɵɵtext(1, \"Creature\");\n    i0.ɵɵelementEnd();\n} }\nfunction HomeModalsSettingsComponent_ng_container_26_p_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const message_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", message_r4, \" \");\n} }\nfunction HomeModalsSettingsComponent_ng_container_26_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, HomeModalsSettingsComponent_ng_container_26_p_1_Template, 2, 1, \"p\", 18);\n    i0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.errorMessages);\n} }\nexport class HomeModalsSettingsComponent {\n    constructor(board) {\n        this.board = board;\n        this.gridMin = GRID_MIN;\n        this.gridMax = GRID_MAX;\n        this.hasAttempedSubmission = false;\n        this.settingsForm = new SettingsForm();\n        this.subscriptions = new Subscription();\n        this.grid$ = this.board\n            .fetchBoard()\n            .pipe(map(({ grid }) => grid));\n        this.closeable = false;\n        this.settings = new EventEmitter();\n        this.dismiss = new EventEmitter();\n        this.subscriptions.add(this.bindSizeToSizeExtra());\n        this.subscriptions.add(this.bindSizeExtraToSize());\n        this.subscriptions.add(this.bindSizeToBoardGrid());\n        this.subscriptions.add(this.bindMovesToBoardMoveset());\n        this.subscriptions.add(this.bindBoardGridToZombies());\n        this.subscriptions.add(this.bindBoardGridToCreatures());\n    }\n    ngOnInit() {\n        this.settingsForm.formControls.size.setValue(this.settingsForm.formControls.size.value);\n    }\n    ngOnDestroy() {\n        this.subscriptions.unsubscribe();\n    }\n    bindSizeToSizeExtra() {\n        const size = this.settingsForm.formControls.size;\n        const sizeExtra = this.settingsForm.formControls.sizeExtra;\n        const sizeChanges = size.valueChanges.pipe(distinctUntilChanged());\n        return sizeChanges.subscribe((data) => sizeExtra.setValue(data));\n    }\n    bindSizeExtraToSize() {\n        const size = this.settingsForm.formControls.size;\n        const sizeExtra = this.settingsForm.formControls.sizeExtra;\n        const sizeExtraChanges = sizeExtra.valueChanges.pipe(distinctUntilChanged());\n        return sizeExtraChanges.subscribe((data) => size.setValue(data));\n    }\n    bindSizeToBoardGrid() {\n        const sizeChanges = this.settingsForm.formControls.size.valueChanges.pipe(distinctUntilChanged());\n        const boardChanges = this.board\n            .fetchBoard()\n            .pipe(distinctUntilChanged(isEqual));\n        return combineLatest([sizeChanges, boardChanges]).subscribe(([size, board]) => {\n            const { grid } = board;\n            const newGrid = [];\n            for (let y = 0; y < size; y++) {\n                const row = [];\n                for (let x = 0; x < size; x++) {\n                    row.push((grid[y] || [])[x] || []);\n                }\n                newGrid.push(row);\n            }\n            this.board.setBoard(Object.assign(Object.assign({}, board), { grid: newGrid }));\n        });\n    }\n    bindMovesToBoardMoveset() {\n        const moveChanges = this.settingsForm.formControls.moveSet.valueChanges.pipe(distinctUntilChanged());\n        const boardChanges = this.board\n            .fetchBoard()\n            .pipe(distinctUntilChanged(isEqual));\n        return combineLatest([moveChanges, boardChanges]).subscribe(([moveSet, board]) => {\n            this.board.setBoard(Object.assign(Object.assign({}, board), { moveSet }));\n        });\n    }\n    bindBoardGridToZombies() {\n        const zombieCounter = this.settingsForm.formControls.zombies;\n        const zombiesOnBoardChanges = this.board\n            .fetchZombies()\n            .pipe(distinctUntilChanged());\n        return zombiesOnBoardChanges.subscribe((zombies) => zombieCounter.setValue(zombies.length));\n    }\n    bindBoardGridToCreatures() {\n        const creatureCounter = this.settingsForm.formControls.creatures;\n        const creaturesOnBoardChanges = this.board\n            .fetchCreatures()\n            .pipe(distinctUntilChanged());\n        return creaturesOnBoardChanges.subscribe((creatures) => creatureCounter.setValue(creatures.length));\n    }\n    onTileClick(coords) {\n        this.updateGameBoard(coords);\n    }\n    updateGameBoard(coords) {\n        const cell = this.board.getTokensOnCoordinate(coords);\n        const mode = this.settingsForm.formControls.mode.value;\n        const zombies = cell.filter((value) => value.type === 'ZOMBIE');\n        const creatures = cell.filter((value) => value.type === 'CREATURE');\n        switch (mode) {\n            case MODE_ZOMBIE:\n                zombies.length > 0\n                    ? this.board.removeZombiesFromCell(coords)\n                    : this.board.addZombieToCell(coords);\n                break;\n            case MODE_CREATURE:\n                creatures.length > 0\n                    ? this.board.removeCreaturesFromCell(coords)\n                    : this.board.addCreatureToCell(coords);\n                break;\n        }\n    }\n    get errors() {\n        return Object.keys(this.settingsForm.controls)\n            .map((key) => { var _a; return ({ key, error: (_a = this.settingsForm.get(key)) === null || _a === void 0 ? void 0 : _a.errors }); })\n            .filter(({ error }) => error);\n    }\n    get errorMessages() {\n        return this.errors.map(({ key }) => {\n            return {\n                size: `Use the slider to select a size between ${this.gridMin} and ${this.gridMax}`,\n                sizeExtra: `Use the slider to select a size between ${this.gridMin} and ${this.gridMax}`,\n                zombies: `Click on the grid to place at least 1 zombie`,\n                creatures: `Click on the grid to place creatures`,\n                mode: `Select a token to place by clicking on the radio buttons`,\n                moveSet: `Type a string of directions (U, D, L, R for Up, Down, Left and Right respectively) that zombies will follow`,\n            }[key];\n        });\n    }\n    submitButtonClick() {\n        this.hasAttempedSubmission = true;\n        if (this.errorMessages.length <= 0) {\n            this.settings.emit(this.board.getBoard());\n        }\n    }\n    onModalDismiss(event) {\n        if (!this.closeable) {\n            return;\n        }\n        this.dismiss.emit(event);\n    }\n}\nHomeModalsSettingsComponent.ɵfac = function HomeModalsSettingsComponent_Factory(t) { return new (t || HomeModalsSettingsComponent)(i0.ɵɵdirectiveInject(i1.BoardDataAccessService)); };\nHomeModalsSettingsComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: HomeModalsSettingsComponent, selectors: [[\"zombie-home-modals-settings\"]], inputs: { closeable: \"closeable\" }, outputs: { settings: \"settings\", dismiss: \"dismiss\" }, features: [i0.ɵɵProvidersFeature([BoardDataAccessService])], decls: 30, vars: 18, consts: [[3, \"dismiss\"], [1, \"pl-12\", \"mb-4\"], [1, \"pl-12\", 2, \"margin-top\", \"0\"], [\"class\", \"text-green-600\", 4, \"ngIf\"], [\"class\", \"text-blue-600\", 4, \"ngIf\"], [1, \"flex\", \"flex-col\", \"text-gray-900\", \"gap-y-5\", 3, \"formGroup\"], [1, \"block\", \"pl-12\", \"pr-10\", 3, \"grid\", \"tileClicked\"], [1, \"flex\", \"justify-center\", \"px-3\", \"pr-10\", \"align-middle\"], [\"type\", \"number\", 3, \"formControl\", \"min\", \"max\"], [\"type\", \"range\", 1, \"flex-1\", 3, \"formControl\", \"min\", \"max\"], [1, \"flex\", \"justify-center\", \"pl-12\", \"gap-x-5\"], [\"type\", \"radio\", \"name\", \"mode\", 3, \"formControl\", \"value\"], [1, \"flex\", \"items-baseline\", \"justify-start\", \"ml-12\", \"mr-10\", \"gap-x-5\"], [\"type\", \"text\", \"placeholder\", \"UDLR\", 1, \"inline-block\", \"w-full\", \"px-4\", \"py-2\", \"border-gray-500\", \"rounded-none\", \"focus:ring-indigo-500\", \"focus:border-indigo-500\", \"rounded-r-md\", \"sm:text-sm\", 3, \"formControl\"], [4, \"ngIf\"], [\"color\", \"green\", 1, \"inline-flex\", \"justify-center\", \"w-full\", \"ml-12\", \"mr-10\", 3, \"click\"], [1, \"text-green-600\"], [1, \"text-blue-600\"], [\"class\", \"ml-12 mr-10 text-red-500\", \"style\", \"margin-top: 0\", 4, \"ngFor\", \"ngForOf\"], [1, \"ml-12\", \"mr-10\", \"text-red-500\", 2, \"margin-top\", \"0\"]], template: function HomeModalsSettingsComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"zombie-modal\", 0);\n        i0.ɵɵlistener(\"dismiss\", function HomeModalsSettingsComponent_Template_zombie_modal_dismiss_0_listener($event) { return ctx.onModalDismiss($event); });\n        i0.ɵɵelementStart(1, \"zombie-modal-header\")(2, \"h3\", 1);\n        i0.ɵɵtext(3, \"Settings\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"p\", 2);\n        i0.ɵɵtext(5, \" Click on the grid to place a \");\n        i0.ɵɵtemplate(6, HomeModalsSettingsComponent_strong_6_Template, 2, 0, \"strong\", 3);\n        i0.ɵɵtemplate(7, HomeModalsSettingsComponent_strong_7_Template, 2, 0, \"strong\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"zombie-modal-body\")(9, \"form\", 5)(10, \"zombie-board-ui\", 6);\n        i0.ɵɵlistener(\"tileClicked\", function HomeModalsSettingsComponent_Template_zombie_board_ui_tileClicked_10_listener($event) { return ctx.onTileClick($event); });\n        i0.ɵɵpipe(11, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 7);\n        i0.ɵɵelement(13, \"input\", 8)(14, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 10)(16, \"label\");\n        i0.ɵɵelement(17, \"input\", 11);\n        i0.ɵɵtext(18, \" Zombie \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"label\");\n        i0.ɵɵelement(20, \"input\", 11);\n        i0.ɵɵtext(21, \" Creature \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 12)(23, \"label\");\n        i0.ɵɵtext(24, \"Moves: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"input\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(26, HomeModalsSettingsComponent_ng_container_26_Template, 2, 1, \"ng-container\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"zombie-modal-footer\")(28, \"zombie-button\", 15);\n        i0.ɵɵlistener(\"click\", function HomeModalsSettingsComponent_Template_zombie_button_click_28_listener() { return ctx.submitButtonClick(); });\n        i0.ɵɵtext(29, \"Submit\");\n        i0.ɵɵelementEnd()()();\n    } if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.settingsForm.formControls.mode.value === 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.settingsForm.formControls.mode.value === 1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.settingsForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"grid\", i0.ɵɵpipeBind1(11, 16, ctx.grid$));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formControl\", ctx.settingsForm.formControls.sizeExtra)(\"min\", ctx.gridMin)(\"max\", ctx.gridMax);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formControl\", ctx.settingsForm.formControls.size)(\"min\", ctx.gridMin)(\"max\", ctx.gridMax);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formControl\", ctx.settingsForm.formControls.mode)(\"value\", 0);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formControl\", ctx.settingsForm.formControls.mode)(\"value\", 1);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControl\", ctx.settingsForm.formControls.moveSet);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasAttempedSubmission);\n    } }, directives: [i2.ModalComponent, i3.ModalHeaderComponent, i4.NgIf, i5.ModalBodyComponent, i6.ɵNgNoValidate, i6.NgControlStatusGroup, i6.FormGroupDirective, i7.BoardUiComponent, i6.NumberValueAccessor, i6.MinValidator, i6.MaxValidator, i6.DefaultValueAccessor, i6.NgControlStatus, i6.FormControlDirective, i6.RangeValueAccessor, i6.RadioControlValueAccessor, i4.NgForOf, i8.ModalFooterComponent, i9.ButtonComponent], pipes: [i4.AsyncPipe], encapsulation: 2 });\n"]},"metadata":{},"sourceType":"module"}