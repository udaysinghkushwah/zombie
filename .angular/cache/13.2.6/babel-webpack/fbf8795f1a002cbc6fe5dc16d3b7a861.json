{"ast":null,"code":"import { map } from 'rxjs';\nimport { BoardDataAccessService } from '@zombie/board/data-access';\nimport { Direction } from '@zombie/board/interfaces';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@zombie/board/data-access\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../../modals/onboarding/src/lib/home-modals-onboarding.component\";\nimport * as i4 from \"../../../modals/settings/src/lib/home-modals-settings.component\";\nimport * as i5 from \"../../../../board/ui/src/lib/board-ui.component\";\n\nfunction HomePageComponent_zombie_home_modals_onboarding_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"zombie-home-modals-onboarding\", 20);\n    i0.ɵɵlistener(\"dismiss\", function HomePageComponent_zombie_home_modals_onboarding_0_Template_zombie_home_modals_onboarding_dismiss_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onOnboardingModalDismiss();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction HomePageComponent_zombie_home_modals_settings_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"zombie-home-modals-settings\", 21);\n    i0.ɵɵlistener(\"settings\", function HomePageComponent_zombie_home_modals_settings_1_Template_zombie_home_modals_settings_settings_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.onSettingsUpdate($event);\n    })(\"dismiss\", function HomePageComponent_zombie_home_modals_settings_1_Template_zombie_home_modals_settings_dismiss_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.onSettingsDismiss();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"closeable\", ctx_r1.hasExistingBoard);\n  }\n}\n\nfunction HomePageComponent_h2_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.message, \" \");\n  }\n}\n\nfunction HomePageComponent_h2_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\", 22);\n    i0.ɵɵtext(1, \" The simulation has been completed \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let HomePageComponent = /*#__PURE__*/(() => {\n  class HomePageComponent {\n    constructor(board) {\n      this.board = board;\n      this.showOnboarding = true;\n      this.showSettings = false;\n      this.hasExistingBoard = false;\n      this.isRunning = true;\n      this.grid$ = this.board.fetchBoard().pipe(map(({\n        grid\n      }) => grid));\n      this.gridSize$ = this.board.fetchBoard().pipe(map(({\n        grid\n      }) => grid.length));\n      this.activeZombieId = 1;\n      this.moveCount = 0;\n      this.log = [];\n      this.resetSimulationMetadata();\n    }\n\n    get message() {\n      return this.log[this.log.length - 1] || '';\n    }\n\n    resetSimulationMetadata() {\n      var _a;\n\n      this.activeZombieId = ((_a = this.getZombiesAscId()[0]) === null || _a === void 0 ? void 0 : _a.id) || 0;\n      this.moveCount = 0;\n    }\n\n    getCreaturesAscId() {\n      return this.board.getCreatures().sort(({\n        id: a\n      }, {\n        id: b\n      }) => a - b);\n    }\n\n    getZombiesAscId() {\n      return this.board.getZombies().sort(({\n        id: a\n      }, {\n        id: b\n      }) => a - b);\n    }\n\n    incrementActiveZombieId() {\n      const zombiesInQueue = this.getZombiesAscId().filter(({\n        id\n      }) => id > this.activeZombieId);\n\n      if (!zombiesInQueue[0]) {\n        this.isRunning = false;\n        return false;\n      }\n\n      this.activeZombieId = zombiesInQueue[0].id;\n      return true;\n    }\n\n    nextButtonClick() {\n      this.moveSimulation();\n    }\n\n    moveSimulation() {\n      if (!this.isRunning) {\n        return;\n      }\n\n      const zombieId = this.activeZombieId;\n      const coords = this.getZombieCoords(zombieId); // infect oldest creature on same spot as active zombie\n\n      const creatures = this.board.getCreaturesOnCoordinate(coords);\n\n      if (creatures.length > 0) {\n        const oldestCreature = creatures.reduce((prev, curr) => prev.id < curr.id ? prev : curr, creatures[0]);\n        this.infectCreature(oldestCreature.id, coords);\n        this.log.push(`zombie ${zombieId} infected a creature at (${coords.x},${coords.y})`);\n        return;\n      } // move zombie\n\n\n      const {\n        moveSet\n      } = this.board.getBoard();\n      const nextMove = moveSet[this.moveCount] || null;\n\n      if (!nextMove) {\n        this.incrementActiveZombieId();\n        this.moveCount = 0;\n        return;\n      }\n\n      const newCoords = this.moveZombie(zombieId, nextMove);\n      this.log.push(`zombie ${zombieId} moved to (${newCoords.x},${newCoords.y})`);\n      this.moveCount++;\n    }\n\n    infectCreature(creatureId, coords) {\n      this.board.removeCreature(creatureId);\n      this.board.addZombieToCell(coords);\n    }\n\n    moveZombie(zombieId, direction) {\n      const coords = this.getZombieCoords(zombieId);\n      const board = this.board.getBoard();\n      const {\n        grid\n      } = board;\n      const destination = coords;\n\n      switch (direction) {\n        case Direction.UP:\n          destination.y = coords.y - 1 < 0 ? grid[coords.x].length - 1 : coords.y - 1;\n          break;\n\n        case Direction.DOWN:\n          destination.y = coords.y - 1 < 0 ? grid[coords.x].length - 1 : coords.y - 1;\n          break;\n\n        case Direction.LEFT:\n          destination.x = coords.x - 1 < 0 ? grid[coords.y].length - 1 : coords.x - 1;\n          break;\n\n        case Direction.RIGHT:\n          destination.x = coords.x + 1 > grid[coords.y].length - 1 ? 0 : coords.x + 1;\n          break;\n      }\n\n      this.board.removeZombie(zombieId);\n      this.board.addZombieToCell(coords, zombieId);\n      return destination;\n    }\n\n    getZombieCoords(zombieId) {\n      return this.board.getCoordsWithTokenAndId('ZOMBIE', zombieId)[0] || null;\n    }\n\n    onOnboardingModalDismiss() {\n      this.showOnboarding = false;\n      this.showSettings = true;\n    }\n\n    onSettingsUpdate(newBoard) {\n      this.showSettings = false;\n      this.hasExistingBoard = true; // update board state\n\n      this.board.setBoard(newBoard);\n      const zombies = this.getZombiesAscId();\n      const creatures = this.getCreaturesAscId();\n      this.board.newZombieId = zombies[zombies.length - 1].id + 1;\n      this.board.newCreatureId = creatures[creatures.length - 1].id + 1;\n      this.isRunning = true;\n      this.resetSimulationMetadata();\n    }\n\n    onSettingsDismiss() {\n      this.showSettings = false;\n    }\n\n    onTileClick(coords) {\n      this.showTileDetails(coords);\n    }\n\n    showTileDetails(coords) {\n      const tile = this.board.getTokensOnCoordinate(coords);\n    }\n\n    openSettings() {\n      this.showSettings = true;\n    }\n\n  }\n\n  HomePageComponent.ɵfac = function HomePageComponent_Factory(t) {\n    return new (t || HomePageComponent)(i0.ɵɵdirectiveInject(i1.BoardDataAccessService));\n  };\n\n  HomePageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomePageComponent,\n    selectors: [[\"zombie-home-page\"]],\n    decls: 28,\n    vars: 8,\n    consts: [[\"data-testid\", \"onboarding-modal\", 3, \"dismiss\", 4, \"ngIf\"], [3, \"closeable\", \"settings\", \"dismiss\", 4, \"ngIf\"], [1, \"max-w-2xl\", \"min-h-full\", \"p-8\", \"py-4\", \"mx-auto\"], [1, \"lg:flex\", \"lg:items-center\", \"lg:justify-between\"], [1, \"flex-1\", \"min-w-0\"], [1, \"text-2xl\", \"font-bold\", \"leading-7\", \"text-gray-900\", \"sm:text-3xl\", \"sm:truncate\"], [1, \"flex\", \"mt-5\", \"lg:mt-0\", \"lg:ml-4\"], [1, \"hidden\", \"sm:block\"], [\"type\", \"button\", 1, \"inline-flex\", \"items-center\", \"px-4\", \"py-2\", \"text-sm\", \"font-medium\", \"text-gray-700\", \"bg-white\", \"border\", \"border-gray-300\", \"rounded-md\", \"shadow-sm\", \"hover:bg-gray-50\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-offset-2\", \"focus:ring-indigo-500\", 3, \"click\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", \"stroke\", \"currentColor\", \"stroke-width\", \"2\", 1, \"w-6\", \"h-6\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"d\", \"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"d\", \"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"], [1, \"pl-2\"], [1, \"hidden\", \"ml-3\", \"sm:block\"], [\"type\", \"button\", 1, \"inline-flex\", \"items-center\", \"px-4\", \"py-2\", \"text-sm\", \"font-medium\", \"text-gray-700\", \"bg-white\", \"border\", \"border-gray-300\", \"rounded-md\", \"shadow-sm\", \"hover:bg-gray-50\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-offset-2\", \"focus:ring-indigo-500\", 3, \"disabled\", \"click\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"d\", \"M13 9l3 3m0 0l-3 3m3-3H8m13 0a9 9 0 11-18 0 9 9 0 0118 0z\"], [1, \"mt-2\"], [\"class\", \"text-xl font-bold leading-7 text-gray-400 sm:text-3xl sm:truncate\", 4, \"ngIf\"], [1, \"px-1\", \"pt-5\", \"mx-auto\", \"max-w-7xl\"], [3, \"grid\", \"tileClicked\"], [\"data-testid\", \"onboarding-modal\", 3, \"dismiss\"], [3, \"closeable\", \"settings\", \"dismiss\"], [1, \"text-xl\", \"font-bold\", \"leading-7\", \"text-gray-400\", \"sm:text-3xl\", \"sm:truncate\"]],\n    template: function HomePageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, HomePageComponent_zombie_home_modals_onboarding_0_Template, 1, 0, \"zombie-home-modals-onboarding\", 0);\n        i0.ɵɵtemplate(1, HomePageComponent_zombie_home_modals_settings_1_Template, 1, 1, \"zombie-home-modals-settings\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h1\", 5);\n        i0.ɵɵtext(6, \" Zombie \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"span\", 7)(9, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function HomePageComponent_Template_button_click_9_listener() {\n          return ctx.openSettings();\n        });\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(10, \"svg\", 9);\n        i0.ɵɵelement(11, \"path\", 10)(12, \"path\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelementStart(13, \"span\", 12);\n        i0.ɵɵtext(14, \"Settings\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"span\", 13)(16, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function HomePageComponent_Template_button_click_16_listener() {\n          return ctx.nextButtonClick();\n        });\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(17, \"svg\", 9);\n        i0.ɵɵelement(18, \"path\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelementStart(19, \"span\", 12);\n        i0.ɵɵtext(20, \"Next\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(21, \"div\", 16);\n        i0.ɵɵtemplate(22, HomePageComponent_h2_22_Template, 2, 1, \"h2\", 17);\n        i0.ɵɵtemplate(23, HomePageComponent_h2_23_Template, 2, 0, \"h2\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"main\")(25, \"div\", 18)(26, \"zombie-board-ui\", 19);\n        i0.ɵɵlistener(\"tileClicked\", function HomePageComponent_Template_zombie_board_ui_tileClicked_26_listener($event) {\n          return ctx.onTileClick($event);\n        });\n        i0.ɵɵpipe(27, \"async\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.showOnboarding);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSettings);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"disabled\", !ctx.isRunning);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.message);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isRunning);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"grid\", i0.ɵɵpipeBind1(27, 6, ctx.grid$));\n      }\n    },\n    directives: [i2.NgIf, i3.HomeModalsOnboardingComponent, i4.HomeModalsSettingsComponent, i5.BoardUiComponent],\n    pipes: [i2.AsyncPipe],\n    encapsulation: 2\n  });\n  return HomePageComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}